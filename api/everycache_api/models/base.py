from flask import abort
from sqlalchemy.ext.hybrid import hybrid_property

from everycache_api.extensions import db, hashids


class BaseMixin(object):
    # unique int for hashids as model class id, autogenerated in __init__.py
    _hashids_model_id: int

    id_ = db.Column("id", db.Integer, primary_key=True, autoincrement=True)
    deleted = db.Column(db.Boolean, nullable=False, default=False)

    @hybrid_property
    def ext_id(self):
        return hashids.encode(self.id_, self._hashids_model_id)

    @classmethod
    def query_ext_id(cls, ext_id: str, skip_deleted: bool = True):
        try:
            id_, hashids_model_id = hashids.decode(ext_id)
        except ValueError:
            # more or less than 2 elements in tuple after decoding
            abort(404)

        if hashids_model_id != cls._hashids_model_id:
            # incorrect id
            abort(404)

        query = cls.query.filter(cls.id_ == id_)

        if skip_deleted:
            query = query.filter(cls.deleted.is_(False))

        return query
